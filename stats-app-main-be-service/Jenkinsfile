pipeline {
  agent any

  tools {
    maven 'Maven 3.6.3'  // dokładna nazwa z Jenkins > Global Tool Configuration
  }

  stages {
    stage('Checkout') {
      steps {
        dir('stats-app-main-be-service') {
          git branch: 'master', credentialsId: 'my-cred', url: 'https://github.com/ktadiallo/formsdev-bd.git'
        }
        dir('stats-app-fe') {
          git branch: 'master', credentialsId: 'my-cred', url: 'https://github.com/SultanHedfors/stats-app-fe.git'
        }
        dir('schedule-report-kafka-producer') {
          git branch: 'master', credentialsId: 'my-cred', url: 'https://github.com/SultanHedfors/schedule-report-kafka-producer.git'
        }
        dir('notification-sender') {
          git branch: 'master', credentialsId: 'my-cred', url: 'https://github.com/SultanHedfors/notification-sender.git'
        }
      }
    }

    stage('Lint & Test BE') {
      parallel {
        stage('main-be-service') {
          steps {
            dir('stats-app-main-be-service') {
              sh 'mvn checkstyle:check'
              sh 'mvn clean package'
              sh 'mvn jacoco:report'
              sh 'mvn org.owasp:dependency-check-maven:check'
            }
          }
        }
        stage('schedule-producer') {
          steps {
            dir('schedule-report-kafka-producer') {
              sh 'mvn checkstyle:check'
              sh 'mvn clean package'
              sh 'mvn jacoco:report'
              sh 'mvn org.owasp:dependency-check-maven:check'
            }
          }
        }
        stage('notification-sender') {
          steps {
            dir('notification-sender') {
              sh 'mvn checkstyle:check'
              sh 'mvn clean package'
              sh 'mvn jacoco:report'
              sh 'mvn org.owasp:dependency-check-maven:check'
            }
          }
        }
      }
    }

    stage('Build FE') {
      steps {
        dir('stats-app-fe') {
          sh 'npm install'
          sh 'npm run build'
        }
      }
    }

    stage('Build Docker') {
      parallel {
        stage('BE images') {
          steps {
            dir('stats-app-main-be-service') { sh 'docker build -t stats-app-main-be-service:latest .' }
            dir('schedule-report-kafka-producer') { sh 'docker build -t schedule-report-kafka-producer:latest .' }
            dir('notification-sender') { sh 'docker build -t notification-sender:latest .' }
          }
        }
        stage('FE image') {
          steps {
            dir('stats-app-fe') { sh 'docker build -t stats-app-fe:latest .' }
          }
        }
      }
    }

    stage('Compose Up') {
      steps {
        dir('stats-app-main-be-service') { sh 'docker-compose up -d' }
      }
    }
  }

  post {
    always {
      junit 'stats-app-main-be-service/target/surefire-reports/*.xml'
      archiveArtifacts artifacts: 'stats-app-main-be-service/target/*.jar', fingerprint: true
    }
    success { echo 'Build i testy OK!' }
    failure { echo 'Coś nie działa, sprawdź logi.' }
  }
}
